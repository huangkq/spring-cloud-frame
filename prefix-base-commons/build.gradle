buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'http://testm.ahaschool.com:9200/nexus/content/groups/public/'
        }
    }
}
plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}
repositories {
    mavenLocal()
    maven {
        mavenLocal()
        url 'http://testm.ahaschool.com:9200/nexus/content/groups/public/'
    }
}

def name = 'prefix-base-commons'
group 'com.tech.base.support'
version = '0.0.3'


sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava].each()
{
    it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options","-Xlint:all"]
    it.options.encoding = "UTF-8"
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}
//pringdependencyManager
dependencyManagement {
    //Maven bom
    imports {
        mavenBom 'com.tech.base.support:spring-cloud-base-bom:0.0.3-RELEASE'
    }
}

//填写的依赖子项目共享依赖配置
dependencies {
	compileOnly("org.projectlombok:lombok:1.18.2")

	//https://github.com/looly/hutool
	compile("cn.hutool:hutool-core")
	
	// http
    compile("org.apache.httpcomponents:httpclient:4.5.6")
    compile("org.apache.httpcomponents:httpcore:4.4.10")
	
	//kafka
    compile('org.springframework.kafka:spring-kafka')
    
    // 3-part tool dependency
    compile('org.apache.commons:commons-lang3')
    compile('org.apache.commons:commons-collections4')
    
    //compileOnly("org.apache.commons:commons-pool2:2.5.0")
    implementation("commons-io:commons-io:2.2")
    implementation("commons-codec:commons-codec")
    
    // swagger dependency
    implementation("io.springfox:springfox-swagger2:2.8.0")
    implementation("io.springfox:springfox-swagger-ui:2.8.0")
    
    //spring boot
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    
    // redis dependency
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("org.apache.commons:commons-pool2")
    compile("org.redisson:redisson")
    
    //spring cloud
    compile("org.springframework.cloud:spring-cloud-starter-openfeign")
	
	//testCompile("junit:junit:4.12")
    // test dependency
    testCompile("org.springframework.boot:spring-boot-starter-test")
    //testCompile("org.mybatis.generator:mybatis-generator-core:1.3.7")
}

jar {
    enabled = true
    baseName = "$name"
}

bootJar {
    enabled = false
}

//打包源码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//上传jar命令 gradle publish
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "$project.group"
            artifactId = "$name"
            version = "$project.version"
            from components.java
            artifact sourcesJar

            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE.md'
                    into 'META-INF'
                }
            }
        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            url = "http://testm.ahaschool.com:9200/nexus/content/repositories/huijiame_repo/"
            //认证用户和密码
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$name"
        pom.groupId = "$project.group"
    }
}